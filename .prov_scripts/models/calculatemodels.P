
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'calculateModels', 'calculateModels', 1, 30).
program(2, 'defineLinearModels', 'calculateModels.defineLinearModels', 6, 15).
program(3, 'calculateLinearModels', 'calculateModels.calculateLinearModels', 16, 23).
program(4, 'simplifyLinearModels', 'calculateModels.simplifyLinearModels', 24, 29).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).
has_subprogram(1, 4).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'IN', 'predlist', 'calculateModels<-predlist', 2, 1).
port(2, 'IN', 'carscores', 'calculateModels<-carscores', 3, 2).
port(3, 'IN', 'max.preds', 'calculateModels<-max.preds', 4, 3).
port(4, 'OUT', 'linear.models', 'calculateModels->linear.models', 5, 4).
port(5, 'IN', 'predlist', 'calculateModels.defineLinearModels<-predlist', 7, 5).
port(6, 'IN', 'carscores', 'calculateModels.defineLinearModels<-carscores', 9, 6).
port(7, 'In', 'maxpreds', 'calculateModels.defineLinearModels<-maxpreds', 11, 7).
port(8, 'OUT', 'models', 'calculateModels.defineLinearModels->models', 13, 8).
port(9, 'OUT', 'matches', 'calculateModels.defineLinearModels->matches', 14, 9).
port(10, 'IN', 'models', 'calculateModels.calculateLinearModels<-models', 17, 8).
port(11, 'IN', 'matches', 'calculateModels.calculateLinearModels<-matches', 19, 9).
port(12, 'OUT', 'coefficients', 'calculateModels.calculateLinearModels->coefficients', 21, 10).
port(13, 'OUT', 'model.errors', 'calculateModels.calculateLinearModels->model.errors', 22, 11).
port(14, 'IN', 'coefficients', 'calculateModels.simplifyLinearModels<-coefficients', 25, 10).
port(15, 'IN', 'model.errors', 'calculateModels.simplifyLinearModels<-model.errors', 26, 11).
port(16, 'OUT', 'final.models', 'calculateModels.simplifyLinearModels->final.models', 27, 12).

% FACT: port_alias(port_id, alias).
port_alias(5, 'predlist').
port_alias(6, 'carscores').
port_alias(7, 'max.preds').
port_alias(10, 'models').
port_alias(11, 'matches').
port_alias(16, 'linear.models').

% FACT: port_uri_template(port_id, uri).

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(1, 2).
has_in_port(1, 3).
has_in_port(2, 5).
has_in_port(2, 6).
has_in_port(2, 7).
has_in_port(3, 10).
has_in_port(3, 11).
has_in_port(4, 14).
has_in_port(4, 15).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 4).
has_out_port(2, 8).
has_out_port(2, 9).
has_out_port(3, 12).
has_out_port(3, 13).
has_out_port(4, 16).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'predlist', '[predlist]').
data(2, 'carscores', '[carscores]').
data(3, 'max.preds', '[max.preds]').
data(4, 'linear.models', '[linear.models]').
data(5, 'predlist', 'calculateModels[predlist]').
data(6, 'carscores', 'calculateModels[carscores]').
data(7, 'max.preds', 'calculateModels[max.preds]').
data(8, 'models', 'calculateModels[models]').
data(9, 'matches', 'calculateModels[matches]').
data(10, 'coefficients', 'calculateModels[coefficients]').
data(11, 'model.errors', 'calculateModels[model.errors]').
data(12, 'linear.models', 'calculateModels[linear.models]').

% FACT: channel(channel_id, data_id).
channel(1, 4).
channel(2, 5).
channel(3, 6).
channel(4, 7).
channel(5, 8).
channel(6, 9).
channel(7, 10).
channel(8, 11).
channel(9, 1).
channel(10, 2).
channel(11, 3).
channel(12, 12).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(16, 1).
port_connects_to_channel(5, 2).
port_connects_to_channel(6, 3).
port_connects_to_channel(7, 4).
port_connects_to_channel(8, 5).
port_connects_to_channel(10, 5).
port_connects_to_channel(9, 6).
port_connects_to_channel(11, 6).
port_connects_to_channel(12, 7).
port_connects_to_channel(14, 7).
port_connects_to_channel(13, 8).
port_connects_to_channel(15, 8).
port_connects_to_channel(5, 9).
port_connects_to_channel(6, 10).
port_connects_to_channel(7, 11).
port_connects_to_channel(16, 12).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(1, 2).
inflow_connects_to_channel(2, 3).
inflow_connects_to_channel(3, 4).
inflow_connects_to_channel(1, 9).
inflow_connects_to_channel(2, 10).
inflow_connects_to_channel(3, 11).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(4, 1).
outflow_connects_to_channel(4, 12).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).

% FACT: log_template(log_template_id, port_id, entry_template, log_annotation_id).

% FACT: log_template_variable(log_variable_id, variable_name, log_template_id).
