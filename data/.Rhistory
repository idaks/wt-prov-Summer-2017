itrdb$metadata[itrdb$metadata$SERIES %in% names(model$predictor.matrix[1,]),]
data(itrdb)
library(paleocar)
library(magrittr)
library(raster)
library(magrittr)
library(tibble)
library(readr)
library(paleocar)
library(magrittr)
library(raster)
library(magrittr)
library(tibble)
library(readr)
itrdb$metadata[itrdb$metadata$SERIES %in% names(model$predictor.matrix[1,]),]
setwd("D:\\Study\\Internship\\WT_PaleoCar_2017\\paleocar")
model <-readRDS('Grca_Region.model.Rds')
names(model$predictor.matrix[1,])
data(itrdb)
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),][1:6]
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),][1:2]
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),][1:2]
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),]
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),][1]
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),][1,2]
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),][1:2]
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),][1:5]
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),2]
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),1]
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),1:3]
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),]
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),1:4]
itrdb$metadata[itrdb$metadata$SERIES %in% c("WY037RA","NM581RA"),1:6]
itrdb$metadata[itrdb$metadata$SERIES %in% names(model$predictor.matrix[1,]),1:6]
itrdb$metadata[itrdb$metadata$SERIES %in% names(model$predictor.matrix[1,]),1:3]
itrdb$metadata[itrdb$metadata$SERIES %in% names(model$predictor.matrix[1,]),1:3]
library(FedData)
setwd("D:\\Study\\Internship\\WT_PaleoCar_2017\\paleocar\\data\\")
dir.create("GRCA", showWarnings = T, recursive = T)
dir.create("GRCA", showWarnings = T, recursive = T)
setwd("D:\\Study\\Internship\\WT_PaleoCar_2017\\meteor_example\\wt-prov-summer-2017\\data")
dir.create("GRCA", showWarnings = T, recursive = T)
# download shapefile directory
FedData::download_data("http://nrdata.nps.gov/programs/Lands/GRCA_tracts.zip", destdir="./data-raw/GRCA")
FedData::download_data("http://nrdata.nps.gov/programs/Lands/GRCA_tracts.zip", destdir="GRCA")
utils::unzip("./GRCA/GRCA_tracts.zip", exdir="./GRCA/GRCA_TRACTS")
grca <- rgdal::readOGR("GRCA/GRCA_TRACTS", layer='GRCA_BOUNDARY')
grca <- rgdal::readOGR("GRCA/GRCA_TRACTS", layer='GRCA_boundary')
rgdal::writeOGR(grca, dsn = "GRCA", layer = "grca", driver = "ESRI Shapefile", overwrite_layer = TRUE)
devtools::use_data(grca, overwrite = TRUE)
library(FedData)
devtools::use_data(grca, overwrite = TRUE)
devtools::use_data(grca, overwrite = TRUE)
library(FedData)
setwd("D:\\Study\\Internship\\WT_PaleoCar_2017\\meteor_example\\wt-prov-summer-2017\\data")
## Load spatial polygon for the boundary of Mesa Verde National Park in southwestern Colorado:
dir.create("GRCA", showWarnings = T, recursive = T)
FedData::download_data("http://nrdata.nps.gov/programs/Lands/GRCA_tracts.zip", destdir="GRCA")
grca <- rgdal::readOGR("GRCA/GRCA_TRACTS", layer='GRCA_boundary')
rgdal::writeOGR(grca, dsn = "GRCA", layer = "grca", driver = "ESRI Shapefile", overwrite_layer = TRUE)
devtools::use_data(grca, overwrite = TRUE)
## Load spatial polygon for the boundary of Mesa Verde National Park in southwestern Colorado:
dir.create("./data-raw/MVNP", showWarnings = F, recursive = T)
# download shapefile directory
FedData::download_data("http://nrdata.nps.gov/programs/Lands/meve_tracts.zip", destdir="./data-raw/MVNP")
## Load spatial polygon for the boundary of Mesa Verde National Park in southwestern Colorado:
dir.create("./data-raw/MVNP", showWarnings = F, recursive = T)
# download shapefile directory
FedData::download_data("http://nrdata.nps.gov/programs/Lands/meve_tracts.zip", destdir="./data-raw/MVNP")
# uncompress shapefile directory
utils::unzip("./data-raw/MVNP/meve_tracts.zip", exdir="./data-raw/MVNP/meve_tracts")
# read shapefile
mvnp <- rgdal::readOGR("./data-raw/MVNP/meve_tracts", layer='MEVE_boundary')
rgdal::writeOGR(mvnp, dsn = "./data-raw/MVNP", layer = "mvnp", driver = "ESRI Shapefile", overwrite_layer = TRUE)
devtools::use_data(mvnp, overwrite = TRUE)
devtools::use_data(grca, overwrite = TRUE)
library(devtools)
devtools::use_data(grca, overwrite = TRUE)
install.packages("devtools")
install.packages("devtools")
devtools::use_data(grca, overwrite = TRUE)
devtools::use_data(grca, overwrite = TRUE)
install.packages("devtools")
devtools::install_github("bocinsky/paleocar")
install.packages("devtools")
library(paleocar)
update.packages("survival")
install.packages("devtools")
devtools::use_data(grca, overwrite = TRUE)
devtools::install_github("bocinsky/paleocar")
devtools::install_github("bocinsky/paleocar")
devtools::install_github("bocinsky/paleocar", force=TRUE)
library(paleocar)
library(magrittr) # The magrittr package enables piping in R.
library(raster)
library(magrittr)
library(tibble)
library(readr)
setwd("D:\\Study\\Internship\\WT_PaleoCar_2017\\paleocar")
library(FedData)
## Load spatial polygon for the boundary of Mesa Verde National Park in southwestern Colorado:
dir.create("./data-raw/GRCA", showWarnings = T, recursive = T)
# download shapefile directory
FedData::download_data("http://nrdata.nps.gov/programs/Lands/GRCA_tracts.zip", destdir="./data-raw/GRCA")
# uncompress shapefile directory
utils::unzip("./data-raw/GRCA/GRCA_tracts.zip", exdir="./data-raw/GRCA/grca_tracts")
grca <- rgdal::readOGR("./data-raw/GRCA/grca_tracts", layer='GRCA_boundary')
rgdal::writeOGR(grca, dsn = "./data-raw/GRCA", layer = "grca", driver = "ESRI Shapefile", overwrite_layer = TRUE)
devtools::use_data(grca, overwrite = TRUE)
dir.create("GRCA", showWarnings = T, recursive = T)
dir.create("GRCA", showWarnings = T, recursive = T)
# download shapefile directory
FedData::download_data("http://nrdata.nps.gov/programs/Lands/GRCA_tracts.zip", destdir="GRCA")
# uncompress shapefile directory
utils::unzip("./GRCA/GRCA_tracts.zip", exdir="./GRCA/GRCA_TRACTS")
dir.create("GRCA", showWarnings = T, recursive = T)
# download shapefile directory
FedData::download_data("http://nrdata.nps.gov/programs/Lands/GRCA_tracts.zip", destdir="GRCA")
# uncompress shapefile directory
utils::unzip("./GRCA/GRCA_tracts.zip", exdir="./GRCA/GRCA_TRACTS")
# read shapefile
grca <- rgdal::readOGR("GRCA/GRCA_TRACTS", layer='GRCA_boundary')
rgdal::writeOGR(grca, dsn = "GRCA", layer = "grca", driver = "ESRI Shapefile", overwrite_layer = TRUE)
rgdal::writeOGR(grca, dsn = "GRCA", layer = "grca", driver = "ESRI Shapefile", overwrite_layer = TRUE)
devtools::use_data(grca, overwrite = TRUE)
calibration.years <- 1900:1980
prediction.years <- 1:2000
## Set a spatial buffer around the area you wish to reconstruct
## from which to grab tree-ring chronologies. This will probably
## be in degrees.
tree.buffer <- 10
treePoly <- suppressWarnings(rgeos::gBuffer(grca, width=tree.buffer, quadsegs=1000))
itrdb <- FedData::get_itrdb(template=treePoly, label="GRCA_PLUS_10DEG", raw.dir = "./ITRDB_GRCA/RAW/ITRDB_GRCA/", extraction.dir = "./data-raw/ITRDB_GRCA/EXTRACTIONS/ITRDB_GRCA/", recon.years=prediction.years, calib.years=calibration.years, measurement.type="Ring Width", chronology.type="ARSTND", force.redo = TRUE)
calibration.years <- 1924:1983
library(FedData)
setwd("D:\\Study\\Internship\\WT_PaleoCar_2017\\meteor_example\\wt-prov-summer-2017\\data")
## Load spatial polygon for the boundary of Mesa Verde National Park in southwestern Colorado:
dir.create("GRCA", showWarnings = T, recursive = T)
FedData::download_data("http://nrdata.nps.gov/programs/Lands/GRCA_tracts.zip", destdir="GRCA")
utils::unzip("./GRCA/GRCA_tracts.zip", exdir="./GRCA/GRCA_TRACTS")
grca <- rgdal::readOGR("GRCA/GRCA_TRACTS", layer='GRCA_boundary')
rgdal::writeOGR(grca, dsn = "GRCA", layer = "grca", driver = "ESRI Shapefile", overwrite_layer = TRUE)
devtools::use_data(grca, overwrite = TRUE)
devtools::use_data(grca, overwrite = TRUE)
install.packages("devtools")
install.packages("devtools")
devtools::use_data(grca, overwrite = TRUE)
install.packages("devtools")
devtools::install_github("bocinsky/paleocar", force=TRUE)
install.packages("devtools")
library(FedData)
library(paleocar)
library(FedData)
library(paleocar)
library(paleocar)
library(paleocar)
install.packages("devtools")
devtools::install_github("bocinsky/paleocar")
library(paleocar)
update.packages("survival")
install.packages("devtools")
install.packages("devtools")
library(FedData)
library(paleocar)
devtools::use_data(grca, overwrite = TRUE)
devtools::use_data(grca, overwrite = TRUE)
library(paleocar)
rgdal::writeOGR(grca, dsn = "GRCA", layer = "grca", driver = "ESRI Shapefile", overwrite_layer = TRUE)
devtools::use_data(grca, overwrite = TRUE)
library(FedData)
dir.create("./data-raw/GRCA", showWarnings = T, recursive = T)
# download shapefile directory
FedData::download_data("http://nrdata.nps.gov/programs/Lands/GRCA_tracts.zip", destdir="./data-raw/GRCA")
# uncompress shapefile directory
utils::unzip("./data-raw/GRCA/GRCA_tracts.zip", exdir="./data-raw/GRCA/grca_tracts")
grca <- rgdal::readOGR("./data-raw/GRCA/grca_tracts", layer='GRCA_boundary')
rgdal::writeOGR(grca, dsn = "./data-raw/GRCA", layer = "grca", driver = "ESRI Shapefile", overwrite_layer = TRUE)
devtools::use_data(grca, overwrite = TRUE)
install.packages("devtools")
devtools::install_github("bocinsky/paleocar")
library(paleocar)
update.packages("survival")
install.packages("devtools")
devtools::install_github("bocinsky/paleocar", force=TRUE)
install.packages("devtools")
library(paleocar)
library(magrittr) # The magrittr package enables piping in R.
library(raster)
library(magrittr)
library(tibble)
library(readr)
devtools::use_data(grca, overwrite = TRUE)
## Load spatial polygon for the boundary of Mesa Verde National Park in southwestern Colorado:
dir.create("./data-raw/GRCA", showWarnings = T, recursive = T)
# download shapefile directory
FedData::download_data("http://nrdata.nps.gov/programs/Lands/GRCA_tracts.zip", destdir="./data-raw/GRCA")
# uncompress shapefile directory
utils::unzip("./data-raw/GRCA/GRCA_tracts.zip", exdir="./data-raw/GRCA/grca_tracts")
# read shapefile
grca <- rgdal::readOGR("./data-raw/GRCA/grca_tracts", layer='GRCA_boundary')
rgdal::writeOGR(grca, dsn = "./data-raw/GRCA", layer = "grca", driver = "ESRI Shapefile", overwrite_layer = TRUE)
devtools::use_data(grca, overwrite = TRUE)
library(FedData)
library(devtools)
## Load spatial polygon for the boundary of Mesa Verde National Park in southwestern Colorado:
dir.create("./data-raw/MVNP", showWarnings = F, recursive = T)
FedData::download_data("http://nrdata.nps.gov/programs/Lands/meve_tracts.zip", destdir="./data-raw/MVNP")
utils::unzip("./data-raw/MVNP/meve_tracts.zip", exdir="./data-raw/MVNP/meve_tracts")
mvnp <- rgdal::readOGR("./data-raw/MVNP/meve_tracts", layer='MEVE_boundary')
rgdal::writeOGR(mvnp, dsn = "./data-raw/MVNP", layer = "mvnp", driver = "ESRI Shapefile", overwrite_layer = TRUE)
devtools::use_data(mvnp, overwrite = TRUE)
unlink("./data-raw/MVNP", recursive=T)
devtools::use_data(mvnp, overwrite = TRUE)
devtools::use_data(mvnp, overwrite = TRUE)
install.packages("devtools")
devtools::install_github("bocinsky/paleocar")
library(paleocar)
update.packages("survival")
install.packages("devtools")
devtools::install_github("bocinsky/paleocar", force=TRUE)
install.packages("devtools")
library(paleocar)
library(magrittr) # The magrittr package enables piping in R.
library(raster)
library(magrittr)
library(tibble)
library(readr)
library(FedData)
library(devtools)
##### MVNP Spatial Polygon
## Load spatial polygon for the boundary of Mesa Verde National Park in southwestern Colorado:
dir.create("./data-raw/MVNP", showWarnings = F, recursive = T)
# download shapefile directory
FedData::download_data("http://nrdata.nps.gov/programs/Lands/meve_tracts.zip", destdir="./data-raw/MVNP")
# uncompress shapefile directory
utils::unzip("./data-raw/MVNP/meve_tracts.zip", exdir="./data-raw/MVNP/meve_tracts")
#
utils::unzip("./data-raw/MVNP/meve_tracts.zip", exdir="./data-raw/MVNP/meve_tracts")
# read shapefile
mvnp <- rgdal::readOGR("./data-raw/MVNP/meve_tracts", layer='MEVE_boundary')
unlink("./data-raw/MVNP", recursive=T)
rgdal::writeOGR(mvnp, dsn = "./data-raw/MVNP", layer = "mvnp", driver = "ESRI Shapefile", overwrite_layer = TRUE)
devtools::use_data(mvnp, overwrite = TRUE)
